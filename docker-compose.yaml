version: '2.1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  cosmosdb:
        image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
        hostname: cosmosdb
        container_name: cosmosdb
        mem_limit: 3g
        cpu_count: 2
        environment:
            AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 10
            AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: "false"
        ports:
              - "8081:8081"
              - "10251:10251"
              - "10252:10252"
              - "10253:10253"
              - "10254:10254"
        volumes:
            - /var/run/docker.sock:/var/run/docker-host.sock
  cosmosdb-connector:
    depends_on:
      - kafka
    build: .
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
      CONNECT_REST_ADVERTISED_HOST_NAME: cosmosdb-connector
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: cosmosdb-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: cosmosdb-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: cosmosdb-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_TOPIC: cosmosdb-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-6.0.0.jar
      CONNECT_LOG4J_ROOT_LOGLEVEL: "WARN"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components,/etc/kafka-connect/jars'
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka=INFO,org.reflections=ERROR,com.azure.cosmos.kafka=DEBUG"
  datagen-connector:
        image: confluentinc/kafka-connect-datagen
        ports:
          - "8080:8080"
        depends_on:
          - zookeeper
          - kafka
        environment:
          CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
          CONNECT_REST_ADVERTISED_HOST_NAME: datagen-connector
          CONNECT_REST_PORT: 8080
          CONNECT_GROUP_ID: datagen-connect-group
          CONNECT_CONFIG_STORAGE_TOPIC: datagen-connect-configs
          CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
          CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
          CONNECT_OFFSET_STORAGE_TOPIC: datagen-connect-offsets
          CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
          CONNECT_STATUS_STORAGE_TOPIC: datagen-connect-status
          CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
          CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
          CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-6.0.0.jar
          CONNECT_LOG4J_ROOT_LOGLEVEL: "WARN"
          CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components,/etc/kafka-connect/jars'
          CONNECT_LOG4J_LOGGERS: "org.apache.kafka=INFO,org.reflections=ERROR"
  schema-registry:
            image: confluentinc/cp-schema-registry:latest
            hostname: schema-registry
            container_name: schema-registry
            depends_on:
              - zookeeper
              - kafka
            ports:
              - "9090:8081"
            environment:
              SCHEMA_REGISTRY_HOST_NAME: schema-registry
              SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181